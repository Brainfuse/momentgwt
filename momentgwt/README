moment.js (momentjs.com) wrapper library for GWT.  

Â¿Why?

While GWT supports some utilities for working with dates, it do not support emulation for the standard java.util.Calendar, etc. 
This project fully wrap the JavaScript library momentjs that contains full Date/calendar utilities with support for internationalization:
 
I hope this can be of help when the currentGWT Date tools are insufficient.
See the API javadocs at http://cancerbero.vacau.com/gwt/momentgwtjavadoc/  



How to use

1) get the .jar at http://code.google.com/p/momentgwt/downloads/list or if building with maven, please see the section "Maven" below. 
2) In your project's gwt.xml module file include <inherits name="org.sgx.momentgwt.MomentGwt" />
3) Ready to use, for example: 

System.out.println(
	Moment.moment().add(2, "days").format("MMMM Do YYYY, h:mm:ss a")); 
	
	
There are three Modules: 

org.sgx.momentgwt.MomentGwtNoScript. Recommended for using latest javascript momentjs library version. 
This module Do not load any momentjs souces. 
User is responsible of loading the momentjs library for example using <script> in <head>

org.sgx.momentgwt.MomentGwt : load only momentjs.min.js automatically (as a GWT resource). No mometjs language

org.sgx.momentgwt.MomentGwtLang : load momentjs and languages automatically (as a GWT resource). 
	

Internationalization

moment.js support internationalization for most languages/locales. They come as extensions in separate
(optional ) javascript files. For example, this is for Spanish: https://raw.github.com/timrwood/moment/develop/min/lang/es.js
The follopwing is a very simple example on how load the desired language script and use
dates internationalized in Spanish: 

	String langEsUrl="https://raw.github.com/timrwood/moment/develop/min/lang/es.js";
	ScriptInjector.fromUrl(langEsUrl).setWindow(ScriptInjector.TOP_WINDOW).setCallback(new Callback<Void, Exception>() {		
		@Override
		public void onSuccess(Void result) {			
			//set the lang globally
			Moment.lang("es"); 
			System.out.println("hoy es : "+Moment.moment().format("dddd"));
		}		
		@Override
		public void onFailure(Exception reason) {			
		}
	}).inject(); 
	

 
 
Maven

momentgwt supports maven and it is available in a personal repository hosted on google code (not in maven central). 
The sub project momentgwttest1 - a simple test application for momentgwt - contains a maven POM file
for compiling the project: https://github.com/cancerberoSgx/momentgwt/blob/master/momentgwttest/momentgwttest1/pom.xml
Check it out to see how you can include momentgwt as a maven dependency in your projects. Important parts of the momentgwt user's .POM: 

	<repositories>
	  <repository>
	    <id>sgmavenrepo</id>
	    <name>Maven Repository for sg libraries</name>
	    <url>http://sgmavenrepo.googlecode.com/svn/maven/repo</url>
	  </repository>
	</repositories>
	
	<dependencies>
		...
		<dependency>
			<groupId>org.sgx</groupId>
			<artifactId>momentgwt</artifactId>
			<version>1.0</version>
		</dependency>
	</dependencies>


See https://github.com/cancerberoSgx/momentgwt/tree/master/momentgwttest/momentgwttest1 for an example project using maven. 
Just cd to the project and mvn:run for compiling and running the app.




JARS

Because we are using maven as our primery build tool, latest .jar files are always at http://sgmavenrepo.googlecode.com/svn/maven/repo/org/sgx/momentgwt/

Also momentgwt-alldeps-x.x.jar is always available at http://code.google.com/p/momentgwt/downloads/list
That .jar has no dependencies. 

If you want to generate the .jars from sources this is how to. 
momentgwt depends on other GWT library called gwtjsutil. 
The following script example download the sources and generated the .jar of
both libraries - momentgwt and gwtjsutil (using maven). If you are going this way you need to include both .jars in your GWT project's java class path. 

# gwtjsutil
svn checkout http://gwtjsutil.googlecode.com/svn/trunk/ gwtjsutil-read-only
cd gwtjsutil/gwtjsutil
mvn install
cd ../..

# momentgwt
git clone git://github.com/cancerberoSgx/momentgwt.git
cd momentgwt/momentgwt
mvn install
cd ../..

If everything is OK, then you should have two .jar files: 

gwtjsutil/gwtjsutil/target/gwtjsutil.jar
momentgwt/momentgwt/target/momentgwt.jar 
